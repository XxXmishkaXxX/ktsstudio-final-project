version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_pass
      POSTGRES_DB: db_game
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  webhook:
    build: ./webhook
    container_name: webhook_service
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./webhook:/webhook
    networks:
      - app_network

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: bot_game_service
    ports:
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      admin_api:
        condition: service_healthy
    volumes:
      - ./bot:/bot
      - ./db_core:/db_core
    networks:
      - app_network

  admin_api:
    build: 
      context: .
      dockerfile: api/Dockerfile
    container_name: admin_api_service
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./api:/api
      - ./db_core:/db_core
    networks:
      - app_network

volumes:
  rabbitmq_data: {}
  postgres_data: {}
  redis_data: {}

networks:
  app_network:
    driver: bridge
